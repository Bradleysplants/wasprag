// schema.prisma - FIXED: Proper vector indexing (no btree for vectors)

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [vector(schema: "public")]
}

model User {
  id                          Int      @id @default(autoincrement())
  email                       String?   @unique
  createdAt                   DateTime @default(now())
  updatedAt                   DateTime @updatedAt
  passwordResetToken          String?  @unique
  passwordResetTokenSentAt    DateTime?
  passwordResetTokenExpiresAt DateTime?
  firstName                   String?
  lastName                    String?
  theme                       String?  @default("light")
  
  // Relations
  subscription               Subscription?
  payments                   Payment[]
}

model PlantInfo {
  id             Int      @id @default(autoincrement())
  name           String
  scientificName String?
  description    String   @db.Text
  careInfo       String?  @db.Text
  soilNeeds      String?  @db.Text
  source         String
  embedding      Unsupported("vector(384)")?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  @@unique([name, scientificName])
  @@index([name])
  @@index([scientificName])
  @@index([source])
  @@index([createdAt])
}

// Subscription model (unchanged)
model Subscription {
  id          Int      @id @default(autoincrement())
  userId      Int      @unique
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  paypalSubscriptionId   String? @unique
  paypalPlanId          String?
  paypalPayerId         String?
  
  plan                  SubscriptionPlan @default(FREE)
  status                SubscriptionStatus @default(INACTIVE)
  currentPeriodStart    DateTime?
  currentPeriodEnd      DateTime?
  nextBillingTime       DateTime?
  
  monthlyQuestions      Int @default(0)
  questionsResetAt      DateTime @default(now())
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// Payment model (unchanged)
model Payment {
  id                    Int      @id @default(autoincrement())
  userId                Int
  user                  User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  paypalOrderId         String   @unique
  paypalPaymentId       String?
  paypalPayerId         String?
  
  amount                Decimal
  currency              String   @default("USD")
  status                PaymentStatus
  description           String?
  
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}

// Enums (unchanged)
enum SubscriptionPlan {
  FREE
  BASIC
  PREMIUM
  PROFESSIONAL
}

enum SubscriptionStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
  CANCELLED
  EXPIRED
  PENDING
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  CANCELLED
  REFUNDED
  DENIED
}